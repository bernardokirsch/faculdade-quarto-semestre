Nome: Bernardo Gularte Kirsch

EXERCÍCIOS:

1) bd_catalogo_discos

CREATE TABLE GRAVADORA (
	IDGRAVADORA	SERIAL NOT NULL,
	NOME		VARCHAR (100),
	ANOFUND		INT,
	PROPRIETARIO	VARCHAR (100),
	PRIMARY KEY (IDGRAVADORA)
);

CREATE TABLE ARTISTA (
	IDARTISTA		SERIAL,
	NOME			VARCHAR (100),
	BIOGRAFIA		VARCHAR (300),
	PRIMARY KEY (IDARTISTA)
);

CREATE TABLE DISCO (
	IDDISCO			SERIAL,
	NOME 			VARCHAR (100),
	N_FAIXAS		SMALLINT,
	ANO			INT,
	IDGRAVADORA		INT,
	IDARTISTA		INT,
	PRIMARY KEY (IDDISCO), 
	FOREIGN KEY (IDGRAVADORA) REFERENCES GRAVADORA (IDGRAVADORA),
	FOREIGN KEY (IDARTISTA) REFERENCES ARTISTA (IDARTISTA)
);

CREATE TABLE MUSICA (
	IDMUSICA		SERIAL,
	TITULO			VARCHAR (100),
	TEMPO			INT,
	PRIMARY KEY (IDMUSICA)
);

CREATE TABLE COMPOE (
	IDMUSICA		INT,
	IDARTISTA		INT,
	PRIMARY KEY (IDMUSICA, IDARTISTA),
	FOREIGN KEY (IDMUSICA) REFERENCES MUSICA (IDMUSICA),
	FOREIGN KEY (IDARTISTA) REFERENCES ARTISTA (IDARTISTA)
);

2) bd_academico

CREATE TABLE PROFESSOR (
	IDPROF		SERIAL,
	NOME 		VARCHAR (150),
	TITULACAO	VARCHAR (30),
	PRIMARY KEY (IDPROF)
);

CREATE TABLE DISCIPLINA (
	IDDISC		SERIAL,
	NOME		VARCHAR (150),
	CH			SMALLINT,
	IDPROF		INT,
	PRIMARY KEY (IDDISC),
	FOREIGN KEY (IDPROF) REFERENCES PROFESSOR (IDPROF) 
);

CREATE TABLE PREREQ (
	IDDISCLIBERADA		INT,
	IDDISCLIBERADORA	INT,
	PRIMARY KEY (IDDISCLIBERADA, IDDISCLIBERADORA)
);

CREATE TABLE ALUNO (
	IDALUNO		SERIAL,
	NOME		VARCHAR (150),
	SEMESTRE	SMALLINT,
	PRIMARY KEY (IDALUNO)
);

CREATE TABLE CURSA (
	IDDISC		INT,
	IDALUNO		INT,
	PRIMARY KEY (IDDISC, IDALUNO),
	FOREIGN KEY (IDDISC) REFERENCES DISCIPLINA (IDDISC),
	FOREIGN KEY (IDALUNO) REFERENCES ALUNO (IDALUNO)
);

3) bd_empresa

CREATE TABLE CATEGORIA (
	IDCAT		SERIAL,
	DESCRICAO	VARCHAR (100),
	SALARIO		DECIMAL,
	PRIMARY KEY (IDCAT)
);

CREATE TABLE ENDERECO (
	IDEND			SERIAL,
	RUA				VARCHAR (150),
	NUMERO			INT,
	COMPLEMENTO		VARCHAR (100),
	PRIMARY KEY (IDEND)
);

CREATE TABLE PROJETO (
	IDPROJ			SERIAL,
	NOME			VARCHAR (150),
	PRAZO			INT,
	IDCOORDENADOR	INT,
	PRIMARY KEY (IDPROJ),
	FOREIGN KEY (IDCOORDENADOR) REFERENCES FUNCIONARIO (IDFUNC)
);

CREATE TABLE DEPARTAMENTO (
	IDDEP		SERIAL,
	NOME		VARCHAR (100),
	IDGERENTE	INT,
	PRIMARY KEY (IDDEP),
	FOREIGN KEY (IDGERENTE) REFERENCES FUNCIONARIO (IDFUNC)
);

CREATE TABLE FUNCIONARIO (
	IDFUNC			SERIAL,
	NOME			VARCHAR (100),
	CPF				VARCHAR (14),
	IDCAT			INT,
	IDDEP			INT,
	IDEND			INT,
	PRIMARY KEY (IDFUNC),
	FOREIGN KEY (IDCAT) REFERENCES CATEGORIA (IDCAT),
	FOREIGN KEY (IDDEP) REFERENCES DEPARTAMENTO (IDDEP),
	FOREIGN KEY (IDEND) REFERENCES ENDERECO (IDEND)
);

CREATE TABLE FUNC_PROJ (
	IDFUNC		INT,
	IDPROJ		INT,
	PRIMARY KEY (IDFUNC, IDPROJ),
	FOREIGN KEY (IDFUNC) REFERENCES FUNCIONARIO (IDFUNC),
	FOREIGN KEY (IDPROJ) REFERENCES PROJETO (IDPROJ)
);

// lhe enviei uma mensagemm com minha dúvida sobre o execício 3 no Discord.